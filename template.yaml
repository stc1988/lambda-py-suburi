AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  lambda-py-suburi

  Powertools example

Globals:
  Function:
    Timeout: 5
    MemorySize: 128
    Runtime: python3.12
    Tracing: Active
    LoggingConfig:
      LogFormat: JSON
  Api:
    TracingEnabled: true

Resources:
  # üîê KMS „Ç≠„Éº
  LambdaEncryptionKey:
    Type: AWS::KMS::Key
    Properties:
      Description: KMS key for Lambda encryption/decryption
      EnableKeyRotation: true
      KeyPolicy:
        Version: "2012-10-17"
        Statement:
          - Sid: AllowRootAccount
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action: "kms:*"
            Resource: "*"
          - Sid: AllowAccountWideLambdaUse
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:GenerateDataKey
            Resource: "*"

  # üîê KMS „Ç®„Ç§„É™„Ç¢„Çπ
  LambdaEncryptionKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: alias/lambda-key
      TargetKeyId: !Ref LambdaEncryptionKey

  # üßæ Lambda ÂÆüË°å„É≠„Éº„É´
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaKMSAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - kms:Encrypt
                  - kms:Decrypt
                  - kms:GenerateDataKey
                Resource: !GetAtt LambdaEncryptionKey.Arn
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"
              - Effect: Allow
                Action:
                  - xray:PutTraceSegments
                  - xray:PutTelemetryRecords
                Resource: "*"

  # üì¶ ÂÖ±ÈÄö„É¨„Ç§„É§„ÉºÔºàPowertools„Å™„Å©Ôºâ
  CommonLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: CommonLayer
      Description: Common utilities for Lambda functions
      ContentUri: layer/Common
      CompatibleRuntimes:
        - python3.11
      RetentionPolicy: Retain

  # üß† Lambda Èñ¢Êï∞
  userFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: userFunction
      Handler: app.lambda_handler
      CodeUri: api/user
      Layers:
        - !Ref CommonLayer
      Description: user function
      Architectures:
        - x86_64
      Tracing: Active
      Role: !GetAtt LambdaExecutionRole.Arn
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: userapi
          POWERTOOLS_TRACER_CAPTURE_RESPONSE: false
          POWERTOOLS_METRICS_NAMESPACE: Powertools
          LOG_LEVEL: INFO
          KMS_KEY_ID: !Ref LambdaEncryptionKeyAlias
      Events:
        HelloPath:
          Type: Api
          Properties:
            Path: /user/{userid}
            Method: POST
      Tags:
        LambdaPowertools: python

Outputs:
  HelloWorldApi:
    Description: API Gateway endpoint URL for Prod environment for Hello World Function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"